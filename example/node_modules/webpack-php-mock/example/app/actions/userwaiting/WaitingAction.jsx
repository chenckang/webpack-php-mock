/**
 * @file 商户成本数据集中分发
 * @author chenkang01
 */

import flux from 'dispatcher/control';
import {createActions} from 'alt/utils/decorators';
import moment from 'moment';

@createActions(flux)
class WaitingAction{

    fetchList(params, ctx) {
        var me = this;

        $.ajax({
            url: '/wlmine/waittimeaoidetail',
            data: params,
            dataType: 'json',
            beforeSend: function () {
                ctx.refs.listInfo.inloading();
            },
            success: function (data) {
                if (0 === data.errno) {
                    me.dispatch(data.data);
                }
            },
            complete: function() {
                ctx.refs.listInfo.unloading();
            }
        });
    }

    fetchInfo(params, ctx) {
        var me = this;

        $.ajax({
            url: '/wlmine/waittimeuseroverview',
            data: params,
            dataType: 'json',
            beforeSend: function () {
                ctx.refs.listInfo.inloading();
            },
            success: function (data) {
                if (0 === data.errno) {
                    data.data.isAoi = params.aoiid;
                    me.dispatch(data.data);
                }
            },
            complete: function() {
                ctx.refs.listInfo.unloading();
            }
        });
    }

    fetchCast(params, ctx) {
        var me = this;

        params.date = moment(new Date()).format('YYYY-MM-DD');

        if (!params.aoiid) {
            me.dispatch({});
            return;
        }

        $.ajax({
            url: '/wlmine/aoiareas',
            data: params,
            dataType: 'json',
            beforeSend: function () {
                ctx.refs.listInfo.inloading();
            },
            success: function (data) {
                if (0 === data.errno) {
                    me.dispatch(data.data);
                }
            },
            complete: function () {
                ctx.refs.listInfo.unloading();
            }
        });
    }
}

export default WaitingAction;
